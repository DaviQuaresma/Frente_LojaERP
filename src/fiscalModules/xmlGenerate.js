/** @format */

const { create } = require("xmlbuilder2");

module.exports = function gerarXmlNfe(dados) {
	const doc = create({ version: "1.0", encoding: "UTF-8" })
		.ele("NFe", { xmlns: "http://www.portalfiscal.inf.br/nfe" })
		.ele("infNFe", { versao: "4.00", Id: `NFe${dados.chave}` })

		// ide
		.ele("ide")
		.ele("cUF")
		.txt(dados.ide.cUF)
		.up()
		.ele("cNF")
		.txt(dados.ide.cNF)
		.up()
		.ele("natOp")
		.txt(dados.ide.natOp)
		.up()
		.ele("mod")
		.txt(dados.ide.mod)
		.up()
		.ele("serie")
		.txt(dados.ide.serie)
		.up()
		.ele("nNF")
		.txt(dados.ide.nNF)
		.up()
		.ele("dhEmi")
		.txt(dados.ide.dhEmi)
		.up()
		.ele("tpNF")
		.txt(dados.ide.tpNF)
		.up()
		.ele("idDest")
		.txt(dados.ide.idDest)
		.up()
		.ele("cMunFG")
		.txt(dados.ide.cMunFG)
		.up()
		.ele("tpImp")
		.txt(dados.ide.tpImp)
		.up()
		.ele("tpEmis")
		.txt(dados.ide.tpEmis)
		.up()
		.ele("cDV")
		.txt(dados.ide.cDV)
		.up()
		.ele("tpAmb")
		.txt(dados.ide.tpAmb)
		.up()
		.ele("finNFe")
		.txt(dados.ide.finNFe)
		.up()
		.ele("indFinal")
		.txt(dados.ide.indFinal)
		.up()
		.ele("indPres")
		.txt(dados.ide.indPres)
		.up()
		.ele("procEmi")
		.txt(dados.ide.procEmi)
		.up()
		.ele("verProc")
		.txt(dados.ide.verProc)
		.up()
		.ele("dhCont")
		.txt(dados.ide.dhCont)
		.up()
		.ele("xJust")
		.txt(dados.ide.xJust)
		.up()
		.up()

		// emit
		.ele("emit")
		.ele("CNPJ")
		.txt(dados.emit.CNPJ)
		.up()
		.ele("xNome")
		.txt(dados.emit.xNome)
		.up()
		.ele("xFant")
		.txt(dados.emit.xFant)
		.up()
		.ele("enderEmit")
		.ele("xLgr")
		.txt(dados.emit.enderEmit.xLgr)
		.up()
		.ele("nro")
		.txt(dados.emit.enderEmit.nro)
		.up()
		.ele("xBairro")
		.txt(dados.emit.enderEmit.xBairro)
		.up()
		.ele("cMun")
		.txt(dados.emit.enderEmit.cMun)
		.up()
		.ele("xMun")
		.txt(dados.emit.enderEmit.xMun)
		.up()
		.ele("UF")
		.txt(dados.emit.enderEmit.UF)
		.up()
		.ele("CEP")
		.txt(dados.emit.enderEmit.CEP)
		.up()
		.ele("cPais")
		.txt(dados.emit.enderEmit.cPais)
		.up()
		.ele("xPais")
		.txt(dados.emit.enderEmit.xPais)
		.up()
		.ele("fone")
		.txt(dados.emit.enderEmit.fone)
		.up()
		.up()
		.ele("IE")
		.txt(dados.emit.IE)
		.up()
		.ele("CRT")
		.txt(dados.emit.CRT)
		.up()
		.up()

		// det (detalhes do item)
		.ele("det", { nItem: "1" })
		.ele("prod")
		.ele("cProd")
		.txt(dados.prod.cProd)
		.up()
		.ele("cEAN")
		.txt(dados.prod.cEAN)
		.up()
		.ele("xProd")
		.txt(dados.prod.xProd)
		.up()
		.ele("NCM")
		.txt(dados.prod.NCM)
		.up()
		.ele("CFOP")
		.txt(dados.prod.CFOP)
		.up()
		.ele("uCom")
		.txt(dados.prod.uCom)
		.up()
		.ele("qCom")
		.txt(dados.prod.qCom)
		.up()
		.ele("vUnCom")
		.txt(dados.prod.vUnCom)
		.up()
		.ele("vProd")
		.txt(dados.prod.vProd)
		.up()
		.ele("cEANTrib")
		.txt(dados.prod.cEANTrib)
		.up()
		.ele("uTrib")
		.txt(dados.prod.uTrib)
		.up()
		.ele("qTrib")
		.txt(dados.prod.qTrib)
		.up()
		.ele("vUnTrib")
		.txt(dados.prod.vUnTrib)
		.up()
		.ele("indTot")
		.txt(dados.prod.indTot)
		.up()
		.up()
		.ele("imposto")
		.ele("vTotTrib")
		.txt(dados.imposto.vTotTrib)
		.up()
		.ele("ICMS")
		.ele("ICMS00")
		.ele("orig")
		.txt(dados.imposto.ICMS.orig)
		.up()
		.ele("CST")
		.txt(dados.imposto.ICMS.CST)
		.up()
		.ele("modBC")
		.txt(dados.imposto.ICMS.modBC)
		.up()
		.ele("vBC")
		.txt(dados.imposto.ICMS.vBC)
		.up()
		.ele("pICMS")
		.txt(dados.imposto.ICMS.pICMS)
		.up()
		.ele("vICMS")
		.txt(dados.imposto.ICMS.vICMS)
		.up()
		.up()
		.up()
		.ele("PIS")
		.ele("PISAliq")
		.ele("CST")
		.txt(dados.imposto.PIS.CST)
		.up()
		.ele("vBC")
		.txt(dados.imposto.PIS.vBC)
		.up()
		.ele("pPIS")
		.txt(dados.imposto.PIS.pPIS)
		.up()
		.ele("vPIS")
		.txt(dados.imposto.PIS.vPIS)
		.up()
		.up()
		.up()
		.ele("COFINS")
		.ele("COFINSAliq")
		.ele("CST")
		.txt(dados.imposto.COFINS.CST)
		.up()
		.ele("vBC")
		.txt(dados.imposto.COFINS.vBC)
		.up()
		.ele("pCOFINS")
		.txt(dados.imposto.COFINS.pCOFINS)
		.up()
		.ele("vCOFINS")
		.txt(dados.imposto.COFINS.vCOFINS)
		.up()
		.up()
		.up()
		.up()
		.up()

		// total
		.ele("total")
		.ele("ICMSTot")
		.ele("vBC")
		.txt(dados.total.vBC)
		.up()
		.ele("vICMS")
		.txt(dados.total.vICMS)
		.up()
		.ele("vICMSDeson")
		.txt(dados.total.vICMSDeson)
		.up()
		.ele("vFCP")
		.txt(dados.total.vFCP)
		.up()
		.ele("vBCST")
		.txt(dados.total.vBCST)
		.up()
		.ele("vST")
		.txt(dados.total.vST)
		.up()
		.ele("vFCPST")
		.txt(dados.total.vFCPST)
		.up()
		.ele("vFCPSTRet")
		.txt(dados.total.vFCPSTRet)
		.up()
		.ele("vProd")
		.txt(dados.total.vProd)
		.up()
		.ele("vFrete")
		.txt(dados.total.vFrete)
		.up()
		.ele("vSeg")
		.txt(dados.total.vSeg)
		.up()
		.ele("vDesc")
		.txt(dados.total.vDesc)
		.up()
		.ele("vII")
		.txt(dados.total.vII)
		.up()
		.ele("vIPI")
		.txt(dados.total.vIPI)
		.up()
		.ele("vIPIDevol")
		.txt(dados.total.vIPIDevol)
		.up()
		.ele("vPIS")
		.txt(dados.total.vPIS)
		.up()
		.ele("vCOFINS")
		.txt(dados.total.vCOFINS)
		.up()
		.ele("vOutro")
		.txt(dados.total.vOutro)
		.up()
		.ele("vNF")
		.txt(dados.total.vNF)
		.up()
		.ele("vTotTrib")
		.txt(dados.total.vTotTrib)
		.up()
		.up()
		.up()

		// transporte
		.ele("transp")
		.ele("modFrete")
		.txt(dados.transp.modFrete)
		.up()
		.up()

		// pagamento
		.ele("pag")
		.ele("detPag")
		.ele("tPag")
		.txt(dados.pag.tPag)
		.up()
		.ele("vPag")
		.txt(dados.pag.vPag)
		.up()
		.up()
		.up()

		// informações adicionais
		.ele("infAdic")
		.ele("infCpl")
		.txt(dados.infAdic.infCpl)
		.up()
		.up()

		// responsável técnico
		.ele("infRespTec")
		.ele("CNPJ")
		.txt(dados.infRespTec.CNPJ)
		.up()
		.ele("xContato")
		.txt(dados.infRespTec.xContato)
		.up()
		.ele("email")
		.txt(dados.infRespTec.email)
		.up()
		.ele("fone")
		.txt(dados.infRespTec.fone)
		.up()
		.up()

		.up() // fecha infNFe
		.end({ prettyPrint: true });

	return doc;
}
